"use client";

// import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

import Nav from "@/components/Nav";
import BottomMenu from "@/components/BottomMenu";
import Button from "@/components/Button";

import { UserProvider } from "@/lib/context/user";

import { DATABASE_ID, COLLECTION_IDS, databases } from "@/lib/appwrite";

import { useSearchParams, useRouter, usePathname } from "next/navigation";

import { ID } from "appwrite";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

async function createTask() {
  console.log("CreateTask");
  try {
    const newDoc = await databases.createDocument(
      DATABASE_ID,
      COLLECTION_IDS.TODOS,
      ID.unique(),
      {
        text: "New Task",
        priority: 0,
        done: false,
      }
    );
    console.log("succesfully fcreated new doc", newDoc);
    return newDoc;
  } catch (error) {
    console.error(error);
  }
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const pathname = usePathname();
  const searchParams = useSearchParams();

  const handleClickAddTask = async (event: any) => {
    event.stopPropagation();

    console.log("handleClickAddTask");

    try {
      const newDoc = await createTask(); // TODO: this is async and can error.

      if (!newDoc) {
        throw new Error("could not create new task");
      }

      let params = new URLSearchParams(searchParams);
      if (params.has("editing")) {
        params.delete("editing");
      }
      params.set("editing", newDoc.$id);
      router.push(`${pathname}?${params.toString()}`);
    } catch (e) {
      console.error(e);
    }
  };

  return (
    <html lang="en">
      <body className={inter.className}>
        <UserProvider>
          <Nav />
          {children}
          <BottomMenu>
            <Button onClick={() => {}} className="mr-1">
              Group by Tag
            </Button>
            <Button
              onClick={() => {}}
              className="mx-1"
              // style={"soft"}
            >
              Prioritize
            </Button>
            <Button
              className="ml-1"
              onClick={handleClickAddTask}
              style={"primary"}
            >
              Add Task
            </Button>
            <button onClick={handleClickAddTask}>test</button>
          </BottomMenu>
        </UserProvider>
      </body>
    </html>
  );
}
